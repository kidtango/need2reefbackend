# import UserOrderByInput from './generated/prisma.graphql'

type Query {
  users(
    query: String
    first: Int
    skip: Int
    after: String
    orderBy: UserOrderByInput
  ): [User!]!
  me: User!
  profile(id: ID!): Profile
  tankPosts(
    where: TankPostWhereInput
    orderBy: TankPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [TankPost]!
}

type Mutation {
  createUser(data: UserCreateInput!): AuthPayload!
  login(data: UserLoginInput!): AuthPayload!
  createTank(data: TankInput!): Tank!
  deleteTank(id: ID!): Tank!
  createTankPost(data: TankPostInput): TankPost!
  createTankReply(data: TankReplyInput!): TankReply!
}

input TankInput {
  title: String!
  profileId: String!
}

input TankReplyInput {
  postId: ID!
  body: String!
}

input TankPostInput {
  body: String!
  tankId: ID!
}
input UserLoginInput {
  email: String!
  password: String!
}

type AuthPayload {
  token: String!
  user: User!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}
